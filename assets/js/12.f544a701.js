(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{476:function(n,e,t){"use strict";t.r(e);var i=t(9),s=Object(i.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"genymotion"}},[n._v("Genymotion")]),n._v(" "),t("h2",{attrs:{id:"获取imei-imei-py"}},[n._v("获取IMEI imei.py")]),n._v(" "),t("p",[n._v("一款基于genymotion的安卓模拟器的python调用，操作方法。本文介绍了使用adb调用，对apk进行安装，启动，卸载，并且实现了模拟器的IMEI和AndroidID的自动获取和修改。每次启动apk时，模拟器的IMEI和AndroidID都已被修改，模拟新终端用户下载和登陆app。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('#!/usr/bin/python \n# -*- coding: UTF-8 -*- \nimport random,os\n\ndef genImeiLuhn(digits14): \n    digit15=0 \n    for num in range(14): \n        if num%2==0: \n            digit15=digit15+int(digits14[num]) \n        else: \n            digit15=digit15+(int(digits14[num])*2)%10+(int(digits14[num])*2)/10 \n    digit15=int(digit15)%10 \n    # 组装14位数字+生成的1位\n    # 第四部分 CD，Check Digit，验证码，由前14位数字通过 Luhn算法计算得出。\n    if digit15==0: \n        digits14=digits14+str(digit15) \n    else: \n        digits14=digits14+str(10-digit15) \n    return digits14 \n# 批量\ndef genMassImei(amount,filepath): \n    fo=open(filepath,"wb") \n    for num in range(amount): \n        stat14digits=genRandomNumer(14)\n        imei=genImeiLuhn(stat14digits) \n        fo.write(imei+"\\r\\n") \n        print imei\n    fo.flush() \n    fo.close()\n# 单个\ndef genMassImei_one(): \n    stat14digits=genRandomNumer(14)\n    imei=genImeiLuhn(stat14digits)\n    # print imei \n    return imei\n    \n\ndef genRandomNumer(Num):\n    number=\'\'.join(str(random.choice(range(10))) for _ in range(Num))\n    return number\n\nif __name__ == \'__main__\':   \n    # genMassImei(100,"imei2.txt")\n    genMassImei_one\n    print genMassImei_one()\n')])])]),t("h2",{attrs:{id:"获取androidid-androidid-py"}},[n._v("获取AndroidID androidID.py")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#!/usr/bin/env python\n#-*- coding:utf-8 -*-\nimport  hashlib,binascii,random\n\ndef sha1_hash(data):\n    '''\n    param input type: str\n    param output type: bytes\n    '''\n    return hashlib.sha1(data.encode('ascii')).digest()\n\ndef generate_device_id(steamid_sha1_hash):\n    '''\n    param input type: bytes\n    param output type: str\n    '''\n    h = binascii.hexlify(steamid_sha1_hash).decode('ascii')      #码流转换\n    return \"%s%s%s\" % (h[:8], h[8:12], h[12:16])    \n\nif __name__==\"__main__\":\n    steamid_sha1_hash = sha1_hash(\"123123312312312\")\n    # print(steamid_sha1_hash)\n    deviceid = generate_device_id(steamid_sha1_hash)\n    print(deviceid)\n")])])]),t("h2",{attrs:{id:"辅助功能-localtime-py"}},[n._v("辅助功能 localtime.py")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('import datetime\ndef getYesterday(): \n    today=datetime.date.today() \n    oneday=datetime.timedelta(days=1) \n    yesterday=today-oneday  \n    return yesterday\n\nif __name__=="__main__":\n    print getYesterday()\n')])])]),t("h2",{attrs:{id:"执行脚本-processgenymotion-py"}},[n._v("执行脚本 processGenymotion.py")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('#!/usr/bin/python \n# -*- coding: UTF-8 -*- \nimport os,time,random,sys\nfrom imei import genMassImei_one\nfrom androidID import sha1_hash,generate_device_id\n\ndef startGenymotion(Name):\n    Bool=os.popen("ps -ef|grep %s|grep player|grep -v grep|wc -l" % (Name)).readlines()[0]\n    if Bool[0]==\'0\':\n        os.system("nohup /opt/genymobile/genymotion/player --vm-name %s >/dev/null 2>&1 &" % (Name))\n        time.sleep(30)\n    else:\n        print("the virtual box %s is still alive" % (Name))\n        pass\n\ndef genymotionShell(Imei,androidID):\n    GENYMOTION_ID=os.popen("/opt/genymobile/genymotion/tools/adb  devices|grep -n 5555|awk -F: \'{print $2}\'|head -n 2|awk END\'{print}\'").readlines()[0].replace("\\n","")\n    os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 shell settings put secure android_id %s" % (GENYMOTION_ID,androidID))\n    os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 shell setprop persist.gsm.imei %s" % (GENYMOTION_ID,Imei))\n    os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 shell setprop genymotion.device.id %s" % (GENYMOTION_ID,Imei))\n    os.system("timeout 10 /opt/genymobile/genymotion/tools/adb -s %s:5555 install ~/genymotion_autostartapp/com.lf.ccdapp.apk" % (GENYMOTION_ID))\n    time.sleep(3)\n    os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 shell am start -n com.lf.ccdapp/com.lf.ccdapp.model.login.activity.SplashActivity" % (GENYMOTION_ID))\n    time.sleep(3)\n    os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 shell input tap 162 226" % (GENYMOTION_ID))\n    # time.sleep(3)\n    # os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 shell shell am force-stop com.lf.ccdapp" % (GENYMOTION_ID))\n    time.sleep(2)\n    os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 uninstall com.lf.ccdapp" % (GENYMOTION_ID))\n\ndef curlUrl(URL):\n    GENYMOTION_ID=os.popen("/opt/genymobile/genymotion/tools/adb  devices|grep -n 5555|awk -F: \'{print $2}\'|head -n 2|awk END\'{print}\'").readlines()[0].replace("\\n","")\n    os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 shell setprop persist.gsm.imei %s" % (GENYMOTION_ID,Imei))\n    os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 shell am start -a android.intent.action.VIEW -d %s" % (GENYMOTION_ID,URL))\n    time.sleep(6)\n    os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 shell input tap 127 147" % (GENYMOTION_ID))\n    WaitTime=random.randint(3,9)\n    print("wait time %s" % (WaitTime))\n    time.sleep(WaitTime)\n    os.system("timeout 5 /opt/genymobile/genymotion/tools/adb -s %s:5555 shell am force-stop com.android.browser" % (GENYMOTION_ID))\n\nif __name__=="__main__":\n    # 获取数量在配置文件~/genymotion_autostartapp/bin/shualiang.conf\n    amount=os.popen("head -n `date +%d` ~/genymotion_autostartapp/bin/shualiang.conf|tail -n 1").readlines()[0]\n    # log日志文件配置\n    Time_day = time.strftime("%Y-%m-%d", time.localtime())\n    PWD=sys.path[0]\n    fo=open(PWD+"/log/"+Time_day+"imei.log","ab") \n\n    for num in range(int(amount)):\n        # 获取androidID\n        dg_number=str(random.randint(1,999999999))\n        steamid_sha1_hash = sha1_hash(dg_number)\n        # print(steamid_sha1_hash)\n        deviceid = generate_device_id(steamid_sha1_hash)\n        # 获取IMEI\n        Imei = genMassImei_one()\n        # 启动虚拟机\n        startGenymotion(\'ccd01\')\n        # 执行流程\n        genymotionShell(Imei,deviceid)\n        # 写日志\n        Time = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())\n        fo.write(Time+" IMEI: "+Imei+ " AndroidID "+deviceid+"\\r\\n")\n        fo.flush() \n    fo.close()\n\n')])])]),t("p",[t("strong",[n._v("本文为作者个人整理，仅作参考,by Mr Zhou.")])])])}),[],!1,null,null,null);e.default=s.exports}}]);